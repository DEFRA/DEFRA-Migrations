<Activity mc:Ignorable="sap sap2010" x:Class="Process_Transaction_2" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:c="clr-namespace:Credentials;assembly=Credentials" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Diagnostics;assembly=System" xmlns:sn="clr-namespace:System.Net;assembly=System" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:us="clr-namespace:UiPathTeam.SharePoint;assembly=UiPathTeam.SharePoint" xmlns:usa="clr-namespace:UiPathTeam.SharePoint.Activities;assembly=UiPathTeam.SharePoint.Activities" xmlns:usal="clr-namespace:UiPathTeam.SharePoint.Activities.Libraries;assembly=UiPathTeam.SharePoint.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_arrExitPoint" Type="InOutArgument(s:Int32[])" />
    <x:Property Name="io_swProcessingTimer" Type="InOutArgument(sd:Stopwatch)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="io_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_arrCaseID" Type="InOutArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="Simulate or Migrate" Name="IN_ProcessType" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Mail Transaction item to be processed. Could be null if the transaction type is a queue item, then IN_QueueTransactionItem will be used instead." Name="in_MailTransactionItem" Type="InArgument(snm:MailMessage)" />
    <x:Property sap2010:Annotation.AnnotationText="Queue Transaction item to be processed. Could be null if the transaction type is a mail item, then in_MailTransactionItem will be used instead." Name="IN_QueueTransactionItem" Type="InArgument(ui:QueueItem)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>896,1732</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Process_Transaction_2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="42">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Net</x:String>
      <x:String>Credentials</x:String>
      <x:String>System.Security</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Microsoft.SharePoint.Client</x:String>
      <x:String>UiPathTeam.SharePoint</x:String>
      <x:String>UiPathTeam.SharePoint.Activities</x:String>
      <x:String>UiPathTeam.SharePoint.Activities.Libraries</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="37">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Credentials</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client.Runtime</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. &#xA;&#xA;&#xA;When setting up a new migration these Orchestrator Assets will need setting for each user:&#xA;&#xA;MigrationSourceType - Network Drive or Email&#xA;MigrationInProgressAction - MoveToInProgress (move item to another location before migrating) or NoAction (do not move item before migrating)&#xA;MigrationInProgressLocation - If MigrationInProgressAction is set to MoveToInProgress, this is the location to move the item to before migrating&#xA;MigrationDownloadSourceFileLocation - The location to download the source file to before processing&#xA;TargetSharePointSite - The target location SharePoint URL&#xA;TargetDocumentLibrary - The target Document Library&#xA;&#xA;The In Progress folder to use (can be blank to keep the file in its location during a migration)&#xA;&#xA;When a migration is completed, these user level assets need removing from them (incase they do future migrations)" DisplayName="Process Transaction Flowchart" sap:VirtualizedContainerService.HintSize="655.2,1666.8" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="strSourceFullFilePath" />
      <Variable x:TypeArguments="x:String" Name="strSourceType" />
      <Variable x:TypeArguments="x:String" Name="strMigrationAction" />
      <Variable x:TypeArguments="x:String" Name="strInProgressFolder" />
      <Variable x:TypeArguments="x:String" Name="strTargetSharePointSite" />
      <Variable x:TypeArguments="x:String" Name="strTargetDocLibrary" />
      <Variable x:TypeArguments="x:String" Name="strTargetFolderTree" />
      <Variable x:TypeArguments="x:String" Name="strDownloadSourceFileToFolder" />
      <Variable x:TypeArguments="sn:NetworkCredential" Name="credADAccount" />
      <Variable x:TypeArguments="x:String" Name="strUniqueID" />
      <Variable x:TypeArguments="x:String" Name="strFileExtension" />
      <Variable x:TypeArguments="x:String" Name="strFileNameWithoutExtension" />
      <Variable x:TypeArguments="x:String" Name="strSourceInProgressFileLocation" />
      <Variable x:TypeArguments="x:String" Name="strItemURL" />
      <Variable x:TypeArguments="x:Double" Name="dblFileSize" />
      <Variable x:TypeArguments="x:String" Name="strFileCreatedBy" />
      <Variable x:TypeArguments="x:String" Name="strLastModifiedDateTime" />
      <Variable x:TypeArguments="s:DateTime" Name="dateLastWriteTime" />
      <Variable x:TypeArguments="s:DateTime" Name="dateLastAccessedDateTime" />
      <Variable x:TypeArguments="x:String" Name="strFullFilePath" />
      <Variable x:TypeArguments="x:String" Name="strExtension" />
      <Variable x:TypeArguments="x:String" Name="strDirectoryPath" />
      <Variable x:TypeArguments="s:DateTime" Name="dateCreatedDateTime" />
      <Variable x:TypeArguments="x:String" Name="strFileName" />
      <Variable x:TypeArguments="x:String" Name="strSourceFileCleanUpAction" />
      <Variable x:TypeArguments="x:String" Name="strSourceFileCleanUpMoveToLocation" />
      <Variable x:TypeArguments="x:String" Name="strSourceFileCleanUpCopyToLocation" />
      <Variable x:TypeArguments="x:Boolean" Name="boolSourceFileCleanUpOverwrite" />
      <Variable x:TypeArguments="x:String" Name="strSourceFileName" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,127.7</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Double x:Key="Height">1274.3999999999999</x:Double>
        <x:Double x:Key="Width">621.2</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID7</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">370,485.6</av:Point>
          <av:Size x:Key="ShapeSize">200,68.8</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">470,554.4 470,604.4</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Get Source File Meta Data" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:MultipleAssign DisplayName="Assign all File Meta Data" sap:VirtualizedContainerService.HintSize="431.2,381.2" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
          <ui:MultipleAssign.AssignOperations>
            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[strFileCreatedBy]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[System.IO.File.GetAccessControl(strSourceFullFilePath).GetOwner(GetType(System.Security.Principal.NTAccount)).ToString]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[strFileName]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[New System.IO.FileInfo(strSourceFullFilePath).Name]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[strExtension]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[New System.IO.FileInfo(strSourceFullFilePath).Extension]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[strDirectoryPath]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[New System.IO.FileInfo(strSourceFullFilePath).DirectoryName]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[strFullFilePath]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[New System.IO.FileInfo(strSourceFullFilePath).FullName]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="s:DateTime">[dateCreatedDateTime]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="s:DateTime">[New System.IO.FileInfo(strSourceFullFilePath).CreationTime]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="s:DateTime">[dateLastWriteTime]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="s:DateTime">[New System.IO.FileInfo(strSourceFullFilePath).LastWriteTime]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:String">[strLastModifiedDateTime]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:String">[New System.IO.FileInfo(strSourceFullFilePath).LastModifiedDate]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="s:DateTime">[dateLastAccessedDateTime]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="s:DateTime">[New System.IO.FileInfo(strSourceFullFilePath).LastAccessTime]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                <ui:AssignOperation.To>
                  <OutArgument x:TypeArguments="x:Double">[dblFileSize]</OutArgument>
                </ui:AssignOperation.To>
                <ui:AssignOperation.Value>
                  <InArgument x:TypeArguments="x:Double">[New System.IO.FileInfo(strSourceFullFilePath).Length]</InArgument>
                </ui:AssignOperation.Value>
              </ui:AssignOperation>
            </scg:List>
          </ui:MultipleAssign.AssignOperations>
        </ui:MultipleAssign>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">370,604.4</av:Point>
              <av:Size x:Key="ShapeSize">200,68.8</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">470,673.2 470,723.2</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Move Source File" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Switch x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="The Default action will be to leave the source file in it's existing location during a migration&#xA;" DisplayName="Switch" Expression="[strMigrationAction]" sap:VirtualizedContainerService.HintSize="497.6,226.4" sap2010:WorkflowViewState.IdRef="Switch`1_1">
              <Switch.Default>
                <Assign DisplayName="No in progress folder - default to existing location" sap:VirtualizedContainerService.HintSize="262.4,59.6" sap2010:WorkflowViewState.IdRef="Assign_36">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSourceInProgressFileLocation]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[strSourceFullFilePath]</InArgument>
                  </Assign.Value>
                </Assign>
              </Switch.Default>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence x:Key="MoveToInProgress" DisplayName="Move Source File to In Progress" sap:VirtualizedContainerService.HintSize="476,352.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[strInProgressFolder + strFileName]" DisplayName="Move Source File to In Progress location" sap:VirtualizedContainerService.HintSize="434,161.2" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="True" Path="[strSourceFullFilePath]" />
                <Assign DisplayName="Set the in progress folder" sap:VirtualizedContainerService.HintSize="434,59.6" sap2010:WorkflowViewState.IdRef="Assign_37">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strSourceInProgressFileLocation]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[strInProgressFolder + strFileName]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
              <Assign x:Key="NoAction" DisplayName="No in progress folder - default to existing location" sap:VirtualizedContainerService.HintSize="262.4,59.6" sap2010:WorkflowViewState.IdRef="Assign_41">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strSourceInProgressFileLocation]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[strSourceFullFilePath]</InArgument>
                </Assign.Value>
              </Assign>
            </Switch>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">370,723.2</av:Point>
                  <av:Size x:Key="ShapeSize">200,68.8</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">470,792 470,842</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Upload File to Target" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Boolean" Name="boolFileExists" />
                  <Variable x:TypeArguments="x:Int32" Name="intFileCountIncrement" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <c:Get_Credential DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="955.2,22" IN_strCredentialName="DRACOEDomainAccess" IN_strRequestMessage="Please enter your laptop login credentials. This should be email address for username and your normal password." IN_strRequestTitle="Credentials Required" sap2010:WorkflowViewState.IdRef="Get_Credential_1" OUT_credNetworkCredential="[credADAccount]" />
                <usa:SharepointApplicationScope AzureApplicationID="{x:Null}" ClientContext="{x:Null}" ClientId="{x:Null}" ClientSecret="{x:Null}" LoginTimeout="{x:Null}" Password="{x:Null}" AzureAppPermissions="None" DisplayName="Sharepoint Application Scope" sap:VirtualizedContainerService.HintSize="955.2,3157.6" sap2010:WorkflowViewState.IdRef="SharepointApplicationScope_1" PlatformType="Online" QueryGrouping="False" ResetCredentials="False" SecurePassword="[credADAccount.SecurePassword]" SharePointInstanceType="Online" URL="[strTargetSharePointSite]" UserName="[credADAccount.username.ToString]">
                  <usa:SharepointApplicationScope.Body>
                    <ActivityAction x:TypeArguments="us:SharePointContextInfo">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="us:SharePointContextInfo" Name="SharePointContextInfoTag" />
                      </ActivityAction.Argument>
                      <Sequence sap:VirtualizedContainerService.HintSize="921.2,3015.6" sap2010:WorkflowViewState.IdRef="Sequence_32">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="879.2,2923.6" sap2010:WorkflowViewState.IdRef="Sequence_31">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Sequence - Check if file already exists. Add _x as required if so" sap:VirtualizedContainerService.HintSize="837.2,1388.8" sap2010:WorkflowViewState.IdRef="Sequence_22">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Default File Exists to True" sap:VirtualizedContainerService.HintSize="591.2,59.6" sap2010:WorkflowViewState.IdRef="Assign_9">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[boolFileExists]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Create Item URL" sap:VirtualizedContainerService.HintSize="591.2,59.6" sap2010:WorkflowViewState.IdRef="Assign_38">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strItemURL]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["/" + strTargetDocLibrary + "/" + strTargetFolderTree + strFileName]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[boolFileExists = True]" DisplayName="While File Exists in SharePoint" sap:VirtualizedContainerService.HintSize="591.2,1097.6" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                              <ui:InterruptibleWhile.Body>
                                <Sequence DisplayName="Body where file exists already" sap:VirtualizedContainerService.HintSize="555.6,930.4" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="513.6,838.4" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                    <TryCatch.Try>
                                      <Sequence sap:VirtualizedContainerService.HintSize="476,606" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <usal:GetFile AttachmentsAction="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Get file" sap:VirtualizedContainerService.HintSize="434,102.4" sap2010:WorkflowViewState.IdRef="GetFile_1" LocalPath="[strDownloadSourceFileToFolder + &quot;/checkfileexists.&quot; + strFileExtension]" LocalPathHintText="Local path where the file will be saved" RelativeUrl="[strItemURL]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                                        <ui:DeleteFileX DisplayName="Delete File - Tidy up the file exists download" sap:VirtualizedContainerService.HintSize="434,80.4" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[strDownloadSourceFileToFolder + &quot;/checkfileexists.&quot; + strFileExtension]" />
                                        <Sequence DisplayName="Sequence - File Exists, change file name and try again" sap:VirtualizedContainerService.HintSize="434,251.2" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Increment the file count" sap:VirtualizedContainerService.HintSize="262.4,59.6" sap2010:WorkflowViewState.IdRef="Assign_11">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[intFileCountIncrement]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[intFileCountIncrement + 1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign new filename string" sap:VirtualizedContainerService.HintSize="262.4,59.6" sap2010:WorkflowViewState.IdRef="Assign_12">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strFileName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[strFileNameWithoutExtension + "_" + intFileCountIncrement.ToString + "." + strFileExtension]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="479.6,22.8" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <If Condition="[exception.tostring.contains(&quot;File Not Found&quot;)]" DisplayName="If exception message shows file not found" sap:VirtualizedContainerService.HintSize="484,341.6" sap2010:WorkflowViewState.IdRef="If_3">
                                            <If.Then>
                                              <Sequence DisplayName="Sequence - File Doesnt Exists - ok to continue" sap:VirtualizedContainerService.HintSize="304.4,151.6" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Set File Exists to False to Exit loop" sap:VirtualizedContainerService.HintSize="262.4,59.6" sap2010:WorkflowViewState.IdRef="Assign_15">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[boolFileExists]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Sequence - File Exists, change file name and try again" sap:VirtualizedContainerService.HintSize="200,84.4" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                    <TryCatch.Finally>
                                      <Assign DisplayName="Re-Create Item URL" sap:VirtualizedContainerService.HintSize="262.4,59.6" sap2010:WorkflowViewState.IdRef="Assign_40">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strItemURL]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">["/" + strTargetDocLibrary + "/" + strTargetFolderTree + strFileName]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </TryCatch.Finally>
                                  </TryCatch>
                                </Sequence>
                              </ui:InterruptibleWhile.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InterruptibleWhile>
                          </Sequence>
                          <If Condition="[LEN(strTargetDocLibrary + &quot;/&quot; + strTargetFolderTree + &quot;/&quot; + strFileName) &lt;= 400]" DisplayName="Check SharePoint character limit will not be breached" sap:VirtualizedContainerService.HintSize="837.2,1402.8" sap2010:WorkflowViewState.IdRef="If_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="550.8,1242.8" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="dictMetaData" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If Condition="[strTargetFolderTree.Trim &lt;&gt; &quot;&quot;]" sap:VirtualizedContainerService.HintSize="508.8,430.4" sap2010:WorkflowViewState.IdRef="If_11">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="310,240" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <usal:CreateFolder AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" sap2010:Annotation.AnnotationText="If folder already exists this doesn't do anything" ChooseFile="False" DisplayName="Create SharePoint folders" sap:VirtualizedContainerService.HintSize="268,148" sap2010:WorkflowViewState.IdRef="CreateFolder_1" LibraryName="[strTargetDocLibrary]" RelativeUrl="[strTargetFolderTree]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="True" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </usal:CreateFolder>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_44">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="508.8,434.8" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                  <ui:CommentOut.Body>
                                    <Sequence DisplayName="Ignored Activities - action needed to take variable custom meta data and apply to uploaded file" sap:VirtualizedContainerService.HintSize="473.2,357.2" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="431.2,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_13" Text="[Need To create a Loop that will go through Each meta data column, will need target column name And Then the value To be added To it. &#xA;Should all be In the queue As meta data (Or reference which file systme Object meta data To use From the variable list)&#xA;&#xA;so To be clear, it must be able To both use:&#xA;1) the file system Object meta data (already stored In variables)&#xA;2) apply custom meta data - stored In the queue transaction&#xA;&#xA;This Is how To reference the orchestrator meta data value:&#xA;in_TransactionItem.SpecificContent(&quot;CPHH&quot;).ToString]" />
                                      <ui:MultipleAssign DisplayName="Assign Meta Data Dictionary (CPHH)" sap:VirtualizedContainerService.HintSize="431.2,162.8" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                                        <ui:MultipleAssign.AssignOperations>
                                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                            <ui:AssignOperation sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AssignOperation_33">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[dictMetaData]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[New Dictionary(Of String, Object)]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:Object">[dictMetaData("CPHH")]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:Object">[strCPHH]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_35">
                                              <ui:AssignOperation.To>
                                                <OutArgument x:TypeArguments="x:Object">[dictMetaData("RBSEnumber")]</OutArgument>
                                              </ui:AssignOperation.To>
                                              <ui:AssignOperation.Value>
                                                <InArgument x:TypeArguments="x:Object">[strRBSE]</InArgument>
                                              </ui:AssignOperation.Value>
                                            </ui:AssignOperation>
                                          </scg:List>
                                        </ui:MultipleAssign.AssignOperations>
                                      </ui:MultipleAssign>
                                    </Sequence>
                                  </ui:CommentOut.Body>
                                </ui:CommentOut>
                                <usal:UploadFile AttachmentsAction="{x:Null}" RelativeUrlHintText="{x:Null}" AllowOperationsOnASPXFiles="False" AllowOverwrite="True" CheckInFileAfterCreation="False" CheckOutFileBeforeOverwrite="False" ChooseFile="True" DisplayName="Upload file" sap:VirtualizedContainerService.HintSize="508.8,103.2" sap2010:WorkflowViewState.IdRef="UploadFile_1" LocalPath="[strSourceInProgressFileLocation]" LocalPathHintText="The current local path of the file" PropertiesToAdd="[dictMetaData]" RelativeUrl="[strItemURL]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="508.8,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="ADD META DATA HERE" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Throw DisplayName="Throw BRE - File Path or Name too long" Exception="[new BusinessRuleException(&quot;File path or name too long&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </Sequence>
                    </ActivityAction>
                  </usa:SharepointApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </usa:SharepointApplicationScope>
              </Sequence>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">370,842</av:Point>
                      <av:Size x:Key="ShapeSize">200,68.8</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">470,910.8 470,960.8</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Check Target File Uploaded" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch DisplayName="Try Catch - Check file is uploaded" sap:VirtualizedContainerService.HintSize="714,1236" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                      <TryCatch.Try>
                        <Sequence sap:VirtualizedContainerService.HintSize="676.4,1003.6" sap2010:WorkflowViewState.IdRef="Sequence_34">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <usa:SharepointApplicationScope AzureApplicationID="{x:Null}" ClientContext="{x:Null}" ClientId="{x:Null}" ClientSecret="{x:Null}" LoginTimeout="{x:Null}" Password="{x:Null}" AzureAppPermissions="None" DisplayName="Sharepoint Application Scope" sap:VirtualizedContainerService.HintSize="634.4,911.6" sap2010:WorkflowViewState.IdRef="SharepointApplicationScope_2" PlatformType="Online" QueryGrouping="False" ResetCredentials="False" SecurePassword="[credADAccount.SecurePassword]" SharePointInstanceType="Online" URL="[strTargetSharePointSite]" UserName="[credADAccount.username.ToString]">
                            <usa:SharepointApplicationScope.Body>
                              <ActivityAction x:TypeArguments="us:SharePointContextInfo">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="us:SharePointContextInfo" Name="SharePointContextInfoTag" />
                                </ActivityAction.Argument>
                                <Sequence sap:VirtualizedContainerService.HintSize="600.4,769.6" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:Double" Name="dblTargetFileSize" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <usal:GetFile AttachmentsAction="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Get file" sap:VirtualizedContainerService.HintSize="558.4,103.2" sap2010:WorkflowViewState.IdRef="GetFile_3" LocalPath="[strDownloadSourceFileToFolder + &quot;/checkfilesize.&quot; + strFileExtension]" LocalPathHintText="Local path where the file will be saved" RelativeUrl="[strItemURL]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                                  <Assign DisplayName="Assign Target File Size" sap:VirtualizedContainerService.HintSize="558.4,59.6" sap2010:WorkflowViewState.IdRef="Assign_42">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Double">[dblTargetFileSize]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Double">[New System.IO.FileInfo(strDownloadSourceFileToFolder + "/checkfilesize." + strFileExtension).Length]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:DeleteFileX DisplayName="Delete Target File Size check file" sap:VirtualizedContainerService.HintSize="558.4,80.4" sap2010:WorkflowViewState.IdRef="DeleteFileX_3" Path="[strDownloadSourceFileToFolder + &quot;/checkfilesize.&quot; + strFileExtension]" />
                                  <If Condition="[dblFileSize = dblTargetFileSize]" DisplayName="Is downloaded file size the same as the source file?" sap:VirtualizedContainerService.HintSize="558.4,314.4" sap2010:WorkflowViewState.IdRef="If_12">
                                    <If.Then>
                                      <Sequence DisplayName="Sequence - File size match" sap:VirtualizedContainerService.HintSize="272,154.4" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="ADD LOGIC FOR SUCCESSFUL MIGRATION" />
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence DisplayName="Sequence - File size mismatch" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Throw DisplayName="Throw BRE - File Path or Name too long" Exception="[new BusinessRuleException(&quot;File path or name too long&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </usa:SharepointApplicationScope.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </usa:SharepointApplicationScope>
                        </Sequence>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="680,22.8" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <If Condition="[exception.tostring.contains(&quot;File Not Found&quot;)]" DisplayName="If exception message shows file not found" sap:VirtualizedContainerService.HintSize="484,406.8" sap2010:WorkflowViewState.IdRef="If_9">
                              <If.Then>
                                <Sequence DisplayName="Sequence - File Doesnt Exists - ok to continue" sap:VirtualizedContainerService.HintSize="272,216.4" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Throw DisplayName="Throw BRE - File NOT uploaded" Exception="[new BusinessRuleException(&quot;File NOT uploaded&quot;)]" sap:VirtualizedContainerService.HintSize="230,22" sap2010:WorkflowViewState.IdRef="Throw_3" />
                                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="230,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="ADD LOGIC FOR FAILED MIGRATION" />
                                </Sequence>
                              </If.Then>
                            </If>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                  </Sequence>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">370,960.8</av:Point>
                          <av:Size x:Key="ShapeSize">200,68.8</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Source File Cleanup" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Switch x:TypeArguments="x:String" DisplayName="Switch - Source File Cleanup Actions" Expression="[strSourceFileCleanUpAction]" sap:VirtualizedContainerService.HintSize="1116,1129.6" sap2010:WorkflowViewState.IdRef="Switch`1_3">
                          <Sequence x:Key="MoveToCompleted" sap:VirtualizedContainerService.HintSize="1076,871.2" sap2010:WorkflowViewState.IdRef="Sequence_49">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage sap:VirtualizedContainerService.HintSize="1034,93.6" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Source File Cleanup - Move To Completed: (From: &quot; + strSourceInProgressFileLocation + &quot; To: &quot; + strSourceFileCleanUpMoveToLocation + strSourceFileName + &quot;)&quot;]" />
                            <If Condition="[boolSourceFileCleanUpOverwrite = True]" DisplayName="If Source File Clean Up is set to Overwrite any existing file" sap:VirtualizedContainerService.HintSize="1034,645.6" sap2010:WorkflowViewState.IdRef="If_13">
                              <If.Then>
                                <Sequence DisplayName="Overwrite any source file in the new moved to location" sap:VirtualizedContainerService.HintSize="476,253.2" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[strSourceFileCleanUpMoveToLocation + strSourceFileName]" DisplayName="Move Source File to a New Location " sap:VirtualizedContainerService.HintSize="434,161.2" sap2010:WorkflowViewState.IdRef="MoveFile_2" Overwrite="True" Path="[strSourceInProgressFileLocation]" />
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="Move source file - but do not overwrite if already exists in move location" sap:VirtualizedContainerService.HintSize="513.6,485.6" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="471.6,393.6" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                                    <TryCatch.Try>
                                      <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[strSourceFileCleanUpMoveToLocation + strSourceFileName]" DisplayName="Move Source File to a New Location" sap:VirtualizedContainerService.HintSize="434,161.2" sap2010:WorkflowViewState.IdRef="MoveFile_3" Path="[strSourceInProgressFileLocation]" />
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,22.8" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <If Condition="[exception.tostring.contains(&quot;Cannot create a file when that file already exists&quot;)]" DisplayName="Catch error if file already exists at the move location" sap:VirtualizedContainerService.HintSize="662.4,345.6" sap2010:WorkflowViewState.IdRef="If_16">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="376,185.6" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:LogMessage DisplayName="Log Throttling Message" sap:VirtualizedContainerService.HintSize="334,93.6" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Warn" Message="[&quot;File exists at move location. File not moved. Source File Cleanup - Move To Completed: (From: &quot; + strSourceInProgressFileLocation + &quot; To: &quot; + strSourceFileCleanUpMoveToLocation + strSourceFileName + &quot;)&quot;]" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                          <Sequence x:Key="DeleteSourceFile" sap:VirtualizedContainerService.HintSize="476,306" sap2010:WorkflowViewState.IdRef="Sequence_47">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage sap:VirtualizedContainerService.HintSize="434,93.6" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Source File Cleanup - Delete Source File: &quot; + strSourceInProgressFileLocation]" />
                            <ui:DeleteFileX DisplayName="Delete Source File" sap:VirtualizedContainerService.HintSize="434,80.4" sap2010:WorkflowViewState.IdRef="DeleteFileX_4" Path="[strSourceInProgressFileLocation]" />
                          </Sequence>
                          <Sequence x:Key="CopyToLocation" sap:VirtualizedContainerService.HintSize="1038.4,624.4" sap2010:WorkflowViewState.IdRef="Sequence_48">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage sap:VirtualizedContainerService.HintSize="996.4,93.6" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Source File Cleanup - Copy To Location: (From: &quot; + strSourceInProgressFileLocation + &quot; To &quot; + strSourceFileCleanUpCopyToLocation + strSourceFileName + &quot;)&quot;]" />
                            <If Condition="[boolSourceFileCleanUpOverwrite = True]" DisplayName="If Source File Clean Up is set to Overwrite any existing file" sap:VirtualizedContainerService.HintSize="996.4,440.4" sap2010:WorkflowViewState.IdRef="If_14">
                              <If.Then>
                                <Sequence DisplayName="Overwrite any source file in the new copied to location" sap:VirtualizedContainerService.HintSize="476,253.2" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:CopyFile ContinueOnError="{x:Null}" Destination="[strSourceFileCleanUpCopyToLocation + strSourceFileName]" DisplayName="Copy Source File to Additional Location" sap:VirtualizedContainerService.HintSize="434,161.2" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[strSourceInProgressFileLocation]" />
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="Copy source file - but do not overwrite if already exists in copy location" sap:VirtualizedContainerService.HintSize="476,280.4" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="434,188.4" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                                    <TryCatch.Try>
                                      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[strSourceFileCleanUpCopyToLocation + strSourceFileName]" DisplayName="Copy Source File to Additional Location" sap:VirtualizedContainerService.HintSize="434,161.2" sap2010:WorkflowViewState.IdRef="CopyFile_2" Path="[strSourceInProgressFileLocation]" />
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,22.8" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <If Condition="[exception.tostring.contains(&quot;already exists&quot;)]" DisplayName="Catch error if file already exists at the move location" sap:VirtualizedContainerService.HintSize="662.4,345.6" sap2010:WorkflowViewState.IdRef="If_17">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="376,185.6" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:LogMessage DisplayName="Log Throttling Message" sap:VirtualizedContainerService.HintSize="334,93.6" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Warn" Message="[&quot;File exists at copy location. File not copied. Source File Cleanup - Copy To Location: (From: &quot; + strSourceInProgressFileLocation + &quot; To &quot; + strSourceFileCleanUpCopyToLocation + strSourceFileName + &quot;)&quot;]" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                          <ui:LogMessage x:Key="NoAction" sap:VirtualizedContainerService.HintSize="334,93.6" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Source File Cleanup - No Action&quot;]" />
                        </Switch>
                      </Sequence>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID0">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">40,485.6</av:Point>
          <av:Size x:Key="ShapeSize">200,68.8</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Get Source File Meta Data" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Sequence>
    </FlowStep>
    <FlowSwitch x:TypeArguments="x:String" Default="{x:Reference __ReferenceID1}" x:Name="__ReferenceID6" DisplayName="Source File Type" Expression="[strSourceType]" sap:VirtualizedContainerService.HintSize="92,87.2" sap2010:WorkflowViewState.IdRef="FlowSwitch`1_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">254,366.4</av:Point>
          <av:Size x:Key="ShapeSize">92,87.2</av:Size>
          <av:PointCollection x:Key="Default">346,410 470,410 470,485.6</av:PointCollection>
          <av:PointCollection x:Key="EmailConnector">254,410 140,410 140,485.6</av:PointCollection>
          <x:String x:Key="DefaultCaseDisplayName">Network Drive</x:String>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <x:Reference>__ReferenceID0<x:Key>Email</x:Key></x:Reference>
    </FlowSwitch>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <FlowStep x:Name="__ReferenceID7">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,127.7</av:Point>
          <av:Size x:Key="ShapeSize">200,195.6</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,323.3 300,366.4</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Order of precedence:&#xA;1) Queue item meta data of  Target SharePoint and Target Document Library&#xA;2) Orchestrator Assets serve as the backup values if queue item meta data is empty" DisplayName="Set up Migration Environment Variables" sap:VirtualizedContainerService.HintSize="200,195.6" sap2010:WorkflowViewState.IdRef="Sequence_38">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="497.6,59.6" sap2010:WorkflowViewState.IdRef="Assign_35">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[strSourceType]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[io_Config("MigrationSourceType").ToString]</InArgument>
          </Assign.Value>
        </Assign>
        <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[strSourceType]" sap:VirtualizedContainerService.HintSize="497.6,165.2" sap2010:WorkflowViewState.IdRef="Switch`1_2">
          <Sequence x:Key="Network Drive" sap:VirtualizedContainerService.HintSize="473.2,769.6" sap2010:WorkflowViewState.IdRef="Sequence_42">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MultipleAssign DisplayName="Set Source/Target/Local Machine variables" sap:VirtualizedContainerService.HintSize="431.2,287.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strMigrationAction]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[io_Config("MigrationInProgressAction").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strInProgressFolder]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[String.Format(io_Config("MigrationInProgressLocation").ToString, io_Config("Username").ToString)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strDownloadSourceFileToFolder]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[String.Format(io_Config("MigrationDownloadSourceFileLocation").ToString, io_Config("Username").ToString)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strSourceFileCleanUpAction]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[io_Config("MigrationSourceFileCleanUpAction").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strSourceFileCleanUpMoveToLocation]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[String.Format(io_Config("MigrationSourceFileCleanUpMoveLocation").ToString, io_Config("Username").ToString)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strSourceFileCleanUpCopyToLocation]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[String.Format(io_Config("MigrationSourceFileCleanUpCopyLocation").ToString, io_Config("Username").ToString)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:Boolean">[boolSourceFileCleanUpOverwrite]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:Boolean">[convert.toboolean(io_Config("MigrationSourceFileCleanUpCopyMoveOverwrite"))]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
            <ui:MultipleAssign DisplayName="Set Queue variables" sap:VirtualizedContainerService.HintSize="431.2,350" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strUniqueID]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[IN_QueueTransactionItem.SpecificContent("Unique ID").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strTargetSharePointSite]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[IN_QueueTransactionItem.SpecificContent("Target SharePoint URL").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strTargetDocLibrary]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[IN_QueueTransactionItem.SpecificContent("Target SharePoint Document Library").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strTargetFolderTree]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[IN_QueueTransactionItem.SpecificContent("Target SharePoint Folder").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strSourceFullFilePath]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[IN_QueueTransactionItem.SpecificContent("Source File Path").ToString]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strFileName]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[path.GetFileName(strSourceFullFilePath)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strFileExtension]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[path.GetExtension(strSourceFullFilePath)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strFileNameWithoutExtension]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[path.GetFileNameWithoutExtension(strSourceFullFilePath)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_36">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[strSourceFileName]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[path.GetFileName(strSourceFullFilePath)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
          </Sequence>
          <ui:MultipleAssign x:Key="Email" DisplayName="Set Source/Target/Local Machine variables" sap:VirtualizedContainerService.HintSize="431.2,225.2" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[strTargetDocLibrary]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[io_Config("TargetDocumentLibrary").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[strTargetSharePointSite]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[io_Config("TargetSharePointSite").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[strMigrationAction]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[io_Config("MigrationInProgressAction").ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[strInProgressFolder]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[String.Format(io_Config("MigrationInProgressLocation").ToString, io_Config("Username").ToString)]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[strDownloadSourceFileToFolder]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[String.Format(io_Config("MigrationDownloadSourceFileLocation").ToString, io_Config("Username").ToString)]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
        </Switch>
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID6</x:Reference>
      </FlowStep.Next>
    </FlowStep>
  </Flowchart>
</Activity>